# Downloads and installs Kubespray 2.14 of Kubernetes 1.18
# Run from: /etc/ansible/playbooks
- hosts: "{{ groups['installer'][0] }}"
  become: false
  name: Install Kubespray
  gather_facts: true
  vars:
    release: release-2.14
    kube_path: /installers/kubespray
    ansible_python_interpreter: /usr/bin/python3
  
  tasks:
    - name: Ping Nodes
      ping:
      tags: ['info']

    - name: Update all packages
      yum:
       name: '*'
      tags: [install]  

    # Checks for the kubespray directory
    - name: Check for kubespray directory
      stat:
        path: "{{ kube_path }}/kubespray-{{ release }}"
      register: kubespray
      tags: [info, install]

    - debug: 
        msg: "Kubspray directory exists: {{ kubespray.stat.exists }}"
      tags: [info]

    # Creates kubespray directory - if required
    - name: Create kubespray directory
      file:
        path: "{{ kube_path }}"
        state: directory
      when: kubespray.stat.exists == false
      tags: [info, install]
      
    # Downloads kubespray into the mounted playbooks folder
    # This is therefore, persisted on your local filesystem
    - name: Get Kubespray if required
      get_url:
        url: 'https://github.com/kubernetes-sigs/kubespray/archive/refs/heads/{{release}}.zip'
        dest: "{{ kube_path }}/{{release}}.zip"
      when: kubespray.stat.exists == false
      tags: [install]
 
    # Extracts kubespray into the mounted playbooks folder
    # This is therefore, persisted on your local filesystem
    - name: Extract Kubespray-{{ release }}
      unarchive:
        src: "{{ kube_path }}/{{release}}.zip"
        dest: "{{ kube_path }}"
      when: kubespray.stat.exists == false
      tags: [install]

    - name: Update pip dependancies
      pip:
        requirements: requirements.txt
        chdir: "{{ kube_path }}/kubespray-{{release}}"
      tags: [cluster]
  
    - name: Re-Check if Kubespray has extracted
      stat:
        path: "{{ kube_path }}/kubespray-{{release}}"
      register: kubespray
      #when: kubespray.stat.exists == false
      tags: [install]

    # May need to update path  
    - name: Copy extra-vars.yml
      copy:
        src: "extra-vars.yml"
        dest: "{{ kube_path }}/kubespray-{{release}}/extra-vars.yml"
      tags: [install]

    # May need to update path 
    - name: Copy hosts-skytap.yml
      copy:
        src: "hosts-skytap.yml"
        dest: "{{ kube_path }}/kubespray-{{release}}/hosts-skytap.yml"
      tags: [install]

    - debug: 
        msg: "Kubspray Exists: {{ kubespray }}"
      tags: [install]
      
    # Run the kubespray playbook on the hosts
    # - include: "{{ kube_path }}/kubespray-{{release}}/cluster.yml"

    - debug:
        msg:
          - "kubespray is available in {{ kube_path }}/kubespray-{{release}}"
          - "cd {{ kube_path }}/kubespray-{{release}}"
          - "ansible-playbook -b -v -i hosts-skytap.yml --extra-vars='@extra-vars.yml' cluster.yml"
      when: kubespray.stat.exists == true
      tags: [info, install]
    
    - debug:
        msg:
          - "kubespray download and unpack failed!"
      when: kubespray.stat.exists == false
      tags: [info, install]