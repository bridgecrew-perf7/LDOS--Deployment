
- name: Configure Nodes
  hosts: all
  become: true
  become_method: sudo
  become_user: root
  gather_facts: true
  any_errors_fatal: true
  vars:
    ansible_ssh_private_key_file: "~/.ssh/id_rsa"
    ansible_ssh_private_key_file_name: "id_rsa"
    ansible_user: k8s
    change_DNS: true
    dns_server: 10.0.0.254 # skytap local dns
    ansible_python_interpreter: /usr/bin/python
 
  tasks:
   - name: ping nodes
     ping:
     tags: ['info']

   - name: update all packages
     yum:
       name: '*'
     tags: [install]  

   - name: Install common packages
     package:
      name: [net-tools,nano,bash-completion,wget,curl,yum-utils,lvm2,device-mapper-persistent-data]
      state: present
     ignore_errors: True
     tags: [install]

   # selinux must be forced to Python2 it does not work in Python3 state: latest
   - name: disable SELinux
     selinux:
       state: disabled
     register: selinux_status
     tags: [selinux]
     
   - name: Check SELINUX Reboot Status
     debug:  
       msg:
       - "Status= => {{ selinux_status.state }}"
       - "Reboot? => {{ selinux_status.reboot_required }}"
     tags: [selinux]

   - name: disable SWAP (1/2)
     shell: |
      swapoff -a

   - name: disable SWAP in fstab (2/2)
     replace:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s+.*)$'
        replace: '# \1'

   # easy option. :)  Otherwise open Master / Worker ports for network - Calico, Fannel 
   - name: turn off firewall for install
     command: systemctl disable firewalld

   # Uncomment if you havent manually copied over SSH keys
   #- replace: wheel group no password
   #   path: /etc/sudoers
   #   regexp: '^#\s*%wheel\s*ALL=\(ALL\)\s*NOPASSWD:\s*ALL$'
   #   replace: '%wheel        ALL=(ALL)       NOPASSWD: ALL'

   #- replace: wheel group all commands
   #  path: /etc/sudoers
   #   regexp: '^%wheel\s*ALL=\(ALL\)\s*ALL$'
   #   replace: '# %wheel  ALL=(ALL)       ALL'
   
   # Writes out Hostnames to act as local DNS -  not really required as it uses SkyTap DNS
   - lineinfile:
      path: /etc/sysconfig/network
      state: present
      line: 'HOSTNAME={{inventory_hostname}}.local'

   - lineinfile:
      path: /etc/hosts
      state: present
      line: '{{ansible_default_ipv4.address}}   {{inventory_hostname}}.local   {{inventory_hostname}}'
   
   # Check for DNS servers
   - name: get dhcp/dhclient.conf
     shell: cat /etc/dhcp/dhclient.conf | grep domain-name-servers
     ignore_errors: true
     register: dhcp_nameserver_entry

   # This file will rebuild the /etc/resolv.conf file on reboot.   
   # We need to leverage the private DNS lookup of SkyTap
   - name: Override current DNS entries
     shell: |
        cp /etc/dhcp/dhclient.conf /etc/dhcp/dhclient.conf.{{ 10000 | random }}.bak
        echo "supersede domain-name-servers {{ dns_server }};" >> /etc/dhcp/dhclient.conf
     register: dhcp_update       
     when: change_dns and ("dhcp_nameserver_entry is not defined" or "'{{ dns_server }}' not in dhcp_nameserver_entry.stdout")

   - name: reboot the machine with all defaults
     reboot:
      when: selinux_status.reboot_required == true or dhcp_update is defined
     tags: [selinux]
